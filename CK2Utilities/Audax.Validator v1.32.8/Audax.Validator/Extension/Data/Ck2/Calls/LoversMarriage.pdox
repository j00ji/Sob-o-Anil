
(ContextValidator CharTrigger) = { Members = {
	(N N) = { Left = "spouse" Right = CharTrigger }
	(N N) = { Left = "spouse_even_if_dead" Right = CharTrigger }
	(N N) = { Left = "lover" Right = CharTrigger }
	(N N) = { Left = "any_lover" Right = CharTriggerWithCount }
	(N N) = { Left = "any_spouse" Right = CharTriggerWithCount }
	(N N) = { Left = "any_spouse_even_if_dead" Right = CharTriggerWithCount }
	(N N) = { Left = "betrothed" Right = CharTrigger }
	
	# is_lover bool: https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-115#post-21709450
	
	(N Y) = { Left = "is_married" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "is_married" Right = Bool }
	
	(N Y) = { Left = "is_lover" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "is_lover" Right = Bool }
	
	(N Y) = { Left = "can_marry" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "can_marry" Right = Bool }
	
	(N Y) = { Left = "is_consort" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "is_consort" Right = Bool }
	

	(Y  ) = { Left = "num_of_spouses" Right = PInt }
	(Y  ) = { Left = "is_main_spouse" Right = Bool }
	(Y  ) = { Left = "is_betrothed" Right = Bool }
	(Y  ) = { Left = "has_lover" Right = Bool }
	(Y  ) = { Left = "num_of_lovers" Right = PInt }
	(N Y) = { Left = "is_former_lover" Right = MaybeEventTargetChar }
	(N Y) = { Left = "is_valid_attraction" Right = MaybeEventTargetChar }
	
	(Y N) = { Left = "has_polygamy" Right = Bool }
} }

(ContextValidator CharCommand) = { Members = {
	(N N) = { Left = "lover" Right = CharCommand }
	(N N) = { Left = "any_lover" Right = CharMaybeLimitCommand }
	(N N) = { Left = "random_lover" Right = CharRandomCommand }
	(N N) = { Left = "spouse" Right = CharCommand }
	(N N) = { Left = "any_spouse" Right = CharMaybeLimitCommand }
	(N N) = { Left = "random_spouse" Right = CharRandomCommand }
	(N N) = { Left = "any_spouse_even_if_dead" Right = CharMaybeLimitCommand }
	(N N) = { Left = "random_spouse_even_if_dead" Right = CharRandomCommand }
	(N N) = { Left = "spouse_even_if_dead" Right = CharCommand }
	(N N) = { Left = "betrothed" Right = CharCommand }
	
	(N Y) = { Left = "add_lover" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(N Y) = { Left = "add_consort" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(N Y) = { Left = "remove_lover" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(N Y) = { Left = "remove_consort" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(Y  ) = { Left = "make_primary_spouse" Right = Yes }
	(N Y) = { Left = "add_spouse" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(N Y) = { Left = "add_spouse_matrilineal" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	(N Y) = { Left = "remove_spouse" Right = { Literal = "spouse" Type = MaybeEventTargetChar Type = Yes Type = CharacterId Type = PrefixedCharId } }
	
	(N Y IfNot = "WarnOnBuggyBehavior") = { Left = "add_betrothal" Right = { MaybeEventTargetChar CharacterId PrefixedCharId } }
	# Apparently works with anything? https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-154#post-25872877
	(N Y) = { Left = "break_betrothal" Right = { MaybeEventTargetChar CharacterId PrefixedCharId Yes } }

} }





















