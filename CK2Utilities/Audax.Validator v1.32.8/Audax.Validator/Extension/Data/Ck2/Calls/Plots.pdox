
(Type PlotTrigger) = {
	Optional = { Left = "target" Right = MaybeEventTargetChar }
	Inherits = CharTrigger
}
	
(Type PlotCommand) = {
	Optional = { Left = "target" Right = MaybeEventTargetChar }
	Inherits = CharCommand
}


(Type PlotMaybeLimitCommand) = {
	Inherits = PlotCommand
	Inherits = PlotLimit
}

(Type PlotLimit) = {
	AddContextValidatorStackFrame = Char
	Optional = { Left = "limit" Right = CharTrigger }
}

(Type PlotTriggerWithCount) = {
	Inherits = PlotTrigger
	Optional = { Left = "count" Right = PInt }
}

(Type PlotRandomCommand) = {
	Inherits = PlotCommand
	Inherits = PlotLimit # Needs to be outside so that the AddStackFrame doesn't interfere with PlotCommand
	
	(Ch N Y) = { Left = "preferred_limit" Right = PlotTrigger }
}



(ContextValidator CharTrigger) = { Members = {
	(N N) = { Left = any_unknown_plotter Right = PlotTriggerWithCount }
} }
(ContextValidator CharCommand) = { Members = {
	(N N) = { Left = any_unknown_plotter Right = PlotMaybeLimitCommand }
	(N N) = { Left = random_unknown_plotter Right = PlotRandomCommand }
} }


(ContextValidator CharTrigger) = { Members = {
	(N N) = { Left = "any_plotter" Right = PlotTriggerWithCount }
	(N N) = { Left = "any_known_plotter" Right = PlotTriggerWithCount }
	
	(N N) = { Left = "plot_target_char" Right = CharTrigger }
	(N N) = { Left = "any_plot_backer" Right = CharTriggerWithCount }
	(N N) = { Left = "any_backed_character" Right = CharTriggerWithCount }
	(N N) = { Left = "plot_target_title" Right = TitleTrigger }
	(N N) = { Left = "supported_claimant_title" Right = TitleTrigger }
	(N N) = { Left = "plot_target_province" Right = ProvTrigger }

	(Y  ) = { Left = "num_of_plot_backers" Right = NnInt }
	(Y  ) = { Left = "is_plot_target_of" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "is_plot_active" Right = Bool }
	(Y  ) = { Left = "plot_power" Right = NnDbl }
	(N Y) = { Left = "plot_power_contribution" Right = {
		Single = { Left = "plotter" Right = MaybeEventTargetChar }
		Single = { Left = "power" Right = NnDbl }
	} }
	
	(A Y) = { Left = "has_plot" Right = { Plot Bool } }
	(A Y) = { Left = "has_ambition" Right = { Objective Bool } }
	(N Y) = { Left = "plot_is_known_by" Right = MaybeEventTargetChar }
	
} }

(ContextValidator CharCommand) = { Members = {
	(N N) = { Left = "any_plot_backer" Right = CharMaybeLimitCommand }
	(N N) = { Left = "plot_target_char" Right = CharCommand }
	(N N) = { Left = "any_known_plotter" Right = CharMaybeLimitCommand }
	(N N) = { Left = "random_backed_character" Right = CharRandomCommand }
	(N N) = { Left = "any_backed_character" Right = CharMaybeLimitCommand }
	(N N) = { Left = "supported_claimant" Right = CharCommand }
	(N N) = { Left = "any_plotter" Right = PlotMaybeLimitCommand }
	
	(N N) = { Left = "supported_claimant_title" Right = TitleCommand }
	(N N) = { Left = "plot_target_title" Right = TitleCommand }
	
	(N N) = { Left = "plot_target_province" Right = ProvCommand }
	
	(Y  ) = { Left = "activate_plot" Right = Bool }
	(N Y) = { Left = "back_plot" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "reveal_plot" Right = { Yes MaybeEventTargetChar } }
	(Y  ) = { Left = "leave_plot" Right = MaybeEventTargetChar }
	(Y  ) = { Left = "reveal_plot_w_message" Right = Yes }
	
	(Y  ) = { Left = "cancel_plot" Right = { Plot Yes } }
	(Y  ) = { Left = "plot_succeeds" Right = Yes }
	(Y  ) = { Left = "ambition_succeeds" Right = Yes }
	(Y  ) = { Left = "cancel_ambition" Right = Yes }
	(Y  ) = { Left = "add_ambition" Right = Objective }

} }
















